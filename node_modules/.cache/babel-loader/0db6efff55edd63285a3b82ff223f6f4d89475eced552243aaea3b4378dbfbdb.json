{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mirei\\\\Desktop\\\\video-gallery\\\\src\\\\VideoSlider.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport DriveVideoEmbed from \"./DriveVideoEmbed.jsx\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VideoSlider({\n  videoList = [],\n  currentVideoId,\n  setCurrentVideoId\n}) {\n  _s();\n  var _videoList$;\n  // Determine if the user is on a desktop or mobile device\n  const isDesktop = useMediaQuery({\n    query: \"(min-width: 801px)\"\n  });\n  const [initialId, setInitialId] = useState(0);\n\n  // Safeguard against missing properties\n  const verticalSlider = ((_videoList$ = videoList[0]) === null || _videoList$ === void 0 ? void 0 : _videoList$.vertical) || false;\n\n  // Calculate the number of visible videos\n  let visibleVideos = isDesktop ? 4 : 2;\n  visibleVideos /= verticalSlider ? 1 : 2;\n\n  // Debugging log to ensure videoList is valid\n  useEffect(() => {\n    console.log(\"Received videoList:\", videoList);\n    if (!videoList.every(video => video.vertical !== undefined)) {\n      console.warn(\"Some videos are missing the 'vertical' property.\");\n    }\n  }, [videoList]);\n\n  // Assign unique list IDs to the videos\n  function assignListIds(videos) {\n    return videos.map((video, listId) => ({\n      ...video,\n      listId\n    }));\n  }\n  videoList = assignListIds(videoList);\n\n  // Get the videos to display\n  const getDisplayVideos = startIndex => {\n    const videos = [];\n    for (let i = 0; i < visibleVideos; i++) {\n      const video = videoList[(startIndex + i) % videoList.length];\n      if (video && video.listId !== undefined && !videos.some(v => v.listId === video.listId)) {\n        videos.push(video);\n      }\n    }\n    return videos;\n  };\n\n  // Handle the \"Next\" button\n  const handleNext = () => {\n    setInitialId(prevId => (prevId + visibleVideos) % videoList.length);\n  };\n\n  // Handle the \"Previous\" button\n  const handlePrev = () => {\n    setInitialId(prevId => (prevId - visibleVideos + videoList.length) % videoList.length);\n  };\n\n  // Pause the currently playing video when a new one is selected\n  const handleVideoPlay = videoId => {\n    if (currentVideoId && currentVideoId !== videoId) {\n      const currentIframe = document.getElementById(`iframe-${currentVideoId}`);\n      if (currentIframe) {\n        currentIframe.contentWindow.postMessage('{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', \"*\");\n      }\n    }\n    setCurrentVideoId(videoId);\n  };\n\n  // Safeguard against invalid or empty videoList\n  if (!Array.isArray(videoList) || videoList.length === 0) {\n    console.error(\"Invalid or empty videoList:\", videoList);\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-videos-message\",\n      children: \"No videos match your search.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Get the current set of videos to display\n  const displayVideos = getDisplayVideos(initialId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-slider\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"arrows-videos-container\",\n      children: [videoList.length > visibleVideos && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"arrows\",\n        onClick: handlePrev,\n        children: \"\\u276E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `video-container ${verticalSlider ? \"\" : \"-horizontal\"}`,\n        children: displayVideos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-item\",\n          children: [/*#__PURE__*/_jsxDEV(DriveVideoEmbed, {\n            videoUrl: video.videoUrl,\n            vertical: video.vertical,\n            title: video.title,\n            subtitle: video.subtitle,\n            videoId: video.id,\n            isPlaying: currentVideoId === video.id,\n            onPlay: handleVideoPlay,\n            thumbnail: video.thumbnail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: video.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: video.subtitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this)]\n        }, video.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), videoList.length > visibleVideos && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"arrows\",\n        onClick: handleNext,\n        children: \"\\u276F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dots-container\",\n      children: Array.from({\n        length: videoList.length\n      }, (_, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `dot ${displayVideos.some(v => v.listId === i) ? \"active\" : \"\"}`,\n        onClick: () => setInitialId(i)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_s(VideoSlider, \"qMGFM5C6rdAybRggc+uRZKjcHzc=\", false, function () {\n  return [useMediaQuery];\n});\n_c = VideoSlider;\nexport default VideoSlider;\nvar _c;\n$RefreshReg$(_c, \"VideoSlider\");","map":{"version":3,"names":["React","useState","useEffect","DriveVideoEmbed","useMediaQuery","jsxDEV","_jsxDEV","VideoSlider","videoList","currentVideoId","setCurrentVideoId","_s","_videoList$","isDesktop","query","initialId","setInitialId","verticalSlider","vertical","visibleVideos","console","log","every","video","undefined","warn","assignListIds","videos","map","listId","getDisplayVideos","startIndex","i","length","some","v","push","handleNext","prevId","handlePrev","handleVideoPlay","videoId","currentIframe","document","getElementById","contentWindow","postMessage","Array","isArray","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","displayVideos","onClick","videoUrl","title","subtitle","id","isPlaying","onPlay","thumbnail","from","_","_c","$RefreshReg$"],"sources":["C:/Users/mirei/Desktop/video-gallery/src/VideoSlider.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport DriveVideoEmbed from \"./DriveVideoEmbed.jsx\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nfunction VideoSlider({ videoList = [], currentVideoId, setCurrentVideoId }) {\r\n    // Determine if the user is on a desktop or mobile device\r\n    const isDesktop = useMediaQuery({ query: \"(min-width: 801px)\" });\r\n    const [initialId, setInitialId] = useState(0);\r\n\r\n    // Safeguard against missing properties\r\n    const verticalSlider = videoList[0]?.vertical || false;\r\n\r\n    // Calculate the number of visible videos\r\n    let visibleVideos = isDesktop ? 4 : 2;\r\n    visibleVideos /= verticalSlider ? 1 : 2;\r\n\r\n    // Debugging log to ensure videoList is valid\r\n    useEffect(() => {\r\n        console.log(\"Received videoList:\", videoList);\r\n        if (!videoList.every((video) => video.vertical !== undefined)) {\r\n            console.warn(\"Some videos are missing the 'vertical' property.\");\r\n        }\r\n    }, [videoList]);\r\n\r\n    // Assign unique list IDs to the videos\r\n    function assignListIds(videos) {\r\n        return videos.map((video, listId) => ({ ...video, listId }));\r\n    }\r\n\r\n    videoList = assignListIds(videoList);\r\n\r\n    // Get the videos to display\r\n    const getDisplayVideos = (startIndex) => {\r\n        const videos = [];\r\n        for (let i = 0; i < visibleVideos; i++) {\r\n            const video = videoList[(startIndex + i) % videoList.length];\r\n            if (\r\n                video &&\r\n                video.listId !== undefined &&\r\n                !videos.some((v) => v.listId === video.listId)\r\n            ) {\r\n                videos.push(video);\r\n            }\r\n        }\r\n        return videos;\r\n    };\r\n\r\n    // Handle the \"Next\" button\r\n    const handleNext = () => {\r\n        setInitialId((prevId) => (prevId + visibleVideos) % videoList.length);\r\n    };\r\n\r\n    // Handle the \"Previous\" button\r\n    const handlePrev = () => {\r\n        setInitialId((prevId) => (prevId - visibleVideos + videoList.length) % videoList.length);\r\n    };\r\n\r\n    // Pause the currently playing video when a new one is selected\r\n    const handleVideoPlay = (videoId) => {\r\n        if (currentVideoId && currentVideoId !== videoId) {\r\n            const currentIframe = document.getElementById(`iframe-${currentVideoId}`);\r\n            if (currentIframe) {\r\n                currentIframe.contentWindow.postMessage(\r\n                    '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}',\r\n                    \"*\"\r\n                );\r\n            }\r\n        }\r\n\r\n        setCurrentVideoId(videoId);\r\n    };\r\n\r\n    // Safeguard against invalid or empty videoList\r\n    if (!Array.isArray(videoList) || videoList.length === 0) {\r\n        console.error(\"Invalid or empty videoList:\", videoList);\r\n        return <p className=\"no-videos-message\">No videos match your search.</p>;\r\n    }\r\n\r\n    // Get the current set of videos to display\r\n    const displayVideos = getDisplayVideos(initialId);\r\n\r\n    return (\r\n        <div className=\"video-slider\">\r\n            <div className=\"arrows-videos-container\">\r\n                {videoList.length > visibleVideos && (\r\n                    <button className=\"arrows\" onClick={handlePrev}>\r\n                        &#10094;\r\n                    </button>\r\n                )}\r\n\r\n                <div className={`video-container ${verticalSlider ? \"\" : \"-horizontal\"}`}>\r\n                    {displayVideos.map((video) => (\r\n                        <div key={video.id} className=\"video-item\">\r\n                            <DriveVideoEmbed\r\n                                videoUrl={video.videoUrl}\r\n                                vertical={video.vertical}\r\n                                title={video.title}\r\n                                subtitle={video.subtitle}\r\n                                videoId={video.id}\r\n                                isPlaying={currentVideoId === video.id}\r\n                                onPlay={handleVideoPlay}\r\n                                thumbnail={video.thumbnail}\r\n                            />\r\n                            <h3>{video.title}</h3>\r\n                            <p>{video.subtitle}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                {videoList.length > visibleVideos && (\r\n                    <button className=\"arrows\" onClick={handleNext}>\r\n                        &#10095;\r\n                    </button>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"dots-container\">\r\n                {Array.from({ length: videoList.length }, (_, i) => (\r\n                    <span\r\n                        key={i}\r\n                        className={`dot ${displayVideos.some((v) => v.listId === i) ? \"active\" : \"\"}`}\r\n                        onClick={() => setInitialId(i)}\r\n                    ></span>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VideoSlider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}