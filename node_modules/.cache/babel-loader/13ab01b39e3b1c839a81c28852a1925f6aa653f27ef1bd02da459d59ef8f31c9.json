{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mirei\\\\Desktop\\\\video-gallery\\\\src\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport VideoSlider from \"./VideoSlider.jsx\";\n// @ts-ignore\nimport './css/root.css';\nimport Footer from \"./Footer.jsx\";\nimport Nabvar from \"./Navbar.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Root() {\n  _s();\n  const viewRef = useRef(null); // Ref to target the #view div\n  const [categories, setCategories] = useState([]);\n  let travelVideos = [{\n    videoUrl: \"https://drive.google.com/file/d/1MF9pskvYNstpLSs_vHGEpdLKcZDiAxYS/preview\",\n    vertical: true,\n    title: \"Wisconsin\",\n    subtitle: \"Summer '24\"\n  }];\n  function assignVideoIds(videos) {\n    return videos.map((video, id) => ({\n      ...video,\n      id\n    }));\n  }\n  travelVideos = assignVideoIds(travelVideos);\n  useEffect(() => {\n    // Extract h2 elements from the #view div\n    if (viewRef.current) {\n      const h2Elements = viewRef.current.querySelectorAll(\"h2\");\n      const h2Text = Array.from(h2Elements).map(h2 => h2.textContent); // Extract textContent\n      setCategories(h2Text); // Update the categories state\n    }\n  }, []); // Run once after the component mounts\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Nabvar, {\n      categories: categories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"view\",\n      ref: viewRef,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Travel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(VideoSlider, {\n          videoList: travelVideos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(Root, \"vhCuIn/Uc9Se18KT3IIzOJ8mdOE=\");\n_c = Root;\nconst rootElement = document.getElementById(\"root\");\nif (rootElement) {\n  createRoot(rootElement).render(/*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 36\n  }, this));\n}\nvar _c;\n$RefreshReg$(_c, \"Root\");","map":{"version":3,"names":["React","useState","useEffect","useRef","createRoot","BrowserRouter","VideoSlider","Footer","Nabvar","jsxDEV","_jsxDEV","Root","_s","viewRef","categories","setCategories","travelVideos","videoUrl","vertical","title","subtitle","assignVideoIds","videos","map","video","id","current","h2Elements","querySelectorAll","h2Text","Array","from","h2","textContent","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","videoList","_c","rootElement","document","getElementById","render","$RefreshReg$"],"sources":["C:/Users/mirei/Desktop/video-gallery/src/index.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport VideoSlider from \"./VideoSlider.jsx\";\r\n// @ts-ignore\r\nimport './css/root.css';\r\nimport Footer from \"./Footer.jsx\";\r\nimport Nabvar from \"./Navbar.jsx\";\r\n\r\nfunction Root() {\r\n    const viewRef = useRef(null); // Ref to target the #view div\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    let travelVideos = [\r\n        { videoUrl: \"https://drive.google.com/file/d/1MF9pskvYNstpLSs_vHGEpdLKcZDiAxYS/preview\", vertical: true, title: \"Wisconsin\", subtitle: \"Summer '24\" }\r\n    ];\r\n\r\n    function assignVideoIds(videos) {\r\n        return videos.map((video, id) => ({ ...video, id }));\r\n    }\r\n\r\n    travelVideos = assignVideoIds(travelVideos);\r\n\r\n    useEffect(() => {\r\n        // Extract h2 elements from the #view div\r\n        if (viewRef.current) {\r\n            const h2Elements = viewRef.current.querySelectorAll(\"h2\");\r\n            const h2Text = Array.from(h2Elements).map((h2) => h2.textContent); // Extract textContent\r\n            setCategories(h2Text); // Update the categories state\r\n        }\r\n    }, []); // Run once after the component mounts\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Nabvar categories={categories} />\r\n            <div id=\"view\" ref={viewRef}>\r\n                <h2>Travel</h2>\r\n                <div>\r\n                    <VideoSlider videoList={travelVideos} />\r\n                </div>\r\n            </div>\r\n            <div id=\"footer\">\r\n                <Footer />\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nif (rootElement) {\r\n    createRoot(rootElement).render(<Root />);\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}