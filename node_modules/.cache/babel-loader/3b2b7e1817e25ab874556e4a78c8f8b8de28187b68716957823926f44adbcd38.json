{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mirei\\\\Desktop\\\\video-gallery\\\\src\\\\DriveVideoEmbed.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, forwardRef } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\n// @ts-ignore\nimport \"./css/slider.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DriveVideoEmbed = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  videoUrl,\n  vertical,\n  title,\n  subtitle,\n  videoId,\n  isPlaying,\n  onPlay,\n  thumbnail\n}, ref) => {\n  _s();\n  const isDesktop = useMediaQuery({\n    query: \"(min-width: 801px)\"\n  });\n  let width, height;\n  if (vertical) {\n    width = isDesktop ? \"15vw\" : \"30vw\";\n    height = `${parseFloat(width) * 16 / 9}vw`;\n  } else {\n    height = \"15vw\";\n    width = \"26.6666666666vw\";\n  }\n  useEffect(() => {\n    if (ref !== null && ref !== void 0 && ref.current && isPlaying) {\n      ref.current.contentWindow.postMessage('{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', \"*\");\n    } else if (ref !== null && ref !== void 0 && ref.current && !isPlaying) {\n      ref.current.contentWindow.postMessage('{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', \"*\");\n    }\n  }, [isPlaying, ref]);\n  const embedUrl = `${videoUrl}?enablejsapi=1&autoplay=${isPlaying ? 1 : 0}&mute=1`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-container\",\n    children: !isPlaying ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thumbnail-overlay\",\n      style: {\n        width,\n        height,\n        position: \"relative\",\n        cursor: \"pointer\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: thumbnail ? \"transparent\" : \"#292929\",\n        backgroundImage: thumbnail ? `url(${thumbnail})` : \"none\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        borderRadius: \"5px\"\n      },\n      onClick: () => onPlay(videoId)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"iframe\", {\n      ref: ref,\n      id: `iframe-${videoId}`,\n      src: embedUrl,\n      style: {\n        top: 0,\n        left: 0,\n        width,\n        height,\n        border: \"none\",\n        borderRadius: \"5px\"\n      },\n      allow: \"autoplay; encrypted-media\",\n      allowFullScreen: true,\n      title: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}, \"o7U1O/8CIqGVMkTTBGAGpbnniP8=\", false, function () {\n  return [useMediaQuery];\n})), \"o7U1O/8CIqGVMkTTBGAGpbnniP8=\", false, function () {\n  return [useMediaQuery];\n});\n_c2 = DriveVideoEmbed;\nvar _c, _c2;\n$RefreshReg$(_c, \"DriveVideoEmbed$forwardRef\");\n$RefreshReg$(_c2, \"DriveVideoEmbed\");","map":{"version":3,"names":["React","useRef","useEffect","forwardRef","useMediaQuery","jsxDEV","_jsxDEV","DriveVideoEmbed","_s","_c","videoUrl","vertical","title","subtitle","videoId","isPlaying","onPlay","thumbnail","ref","isDesktop","query","width","height","parseFloat","current","contentWindow","postMessage","embedUrl","className","children","style","position","cursor","display","justifyContent","alignItems","backgroundColor","backgroundImage","backgroundSize","backgroundPosition","borderRadius","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","src","top","left","border","allow","allowFullScreen","_c2","$RefreshReg$"],"sources":["C:/Users/mirei/Desktop/video-gallery/src/DriveVideoEmbed.jsx"],"sourcesContent":["import React, { useRef, useEffect, forwardRef } from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n// @ts-ignore\r\nimport \"./css/slider.css\";\r\n\r\nconst DriveVideoEmbed = forwardRef(({ videoUrl, vertical, title, subtitle, videoId, isPlaying, onPlay, thumbnail }, ref) => {\r\n    const isDesktop = useMediaQuery({ query: \"(min-width: 801px)\" });\r\n\r\n    let width, height;\r\n    if (vertical) {\r\n        width = isDesktop ? \"15vw\" : \"30vw\";\r\n        height = `${(parseFloat(width) * 16) / 9}vw`;\r\n    } else {\r\n        height = \"15vw\";\r\n        width = \"26.6666666666vw\";\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (ref?.current && isPlaying) {\r\n            ref.current.contentWindow.postMessage(\r\n                '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}',\r\n                \"*\"\r\n            );\r\n        } else if (ref?.current && !isPlaying) {\r\n            ref.current.contentWindow.postMessage(\r\n                '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}',\r\n                \"*\"\r\n            );\r\n        }\r\n    }, [isPlaying, ref]);\r\n\r\n    const embedUrl = `${videoUrl}?enablejsapi=1&autoplay=${isPlaying ? 1 : 0}&mute=1`;\r\n\r\n    return (\r\n        <div className=\"video-container\">\r\n            {!isPlaying ? (\r\n                <div\r\n                    className=\"thumbnail-overlay\"\r\n                    style={{\r\n                        width,\r\n                        height,\r\n                        position: \"relative\",\r\n                        cursor: \"pointer\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        backgroundColor: thumbnail ? \"transparent\" : \"#292929\",\r\n                        backgroundImage: thumbnail ? `url(${thumbnail})` : \"none\",\r\n                        backgroundSize: \"cover\",\r\n                        backgroundPosition: \"center\",\r\n                        borderRadius: \"5px\",\r\n                    }}\r\n                    onClick={() => onPlay(videoId)}\r\n                ></div>\r\n            ) : (\r\n                <iframe\r\n                    ref={ref}\r\n                    id={`iframe-${videoId}`}\r\n                    src={embedUrl}\r\n                    style={{\r\n                        top: 0,\r\n                        left: 0,\r\n                        width,\r\n                        height,\r\n                        border: \"none\",\r\n                        borderRadius: \"5px\",\r\n                    }}\r\n                    allow=\"autoplay; encrypted-media\"\r\n                    allowFullScreen\r\n                    title={title}\r\n                ></iframe>\r\n            )}\r\n        </div>\r\n    );\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}