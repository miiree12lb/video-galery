{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mirei\\\\Desktop\\\\video-gallery\\\\src\\\\VideoSlider.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport DriveVideoEmbed from \"./DriveVideoEmbed.jsx\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VideoSlider({\n  videoList\n}) {\n  _s();\n  const isDesktop = useMediaQuery({\n    query: \"(min-width: 801px)\"\n  });\n  const visibleVideos = isDesktop ? 4 : 2;\n  const [initialId, setInitialId] = useState(0);\n  const getDisplayVideos = startIndex => {\n    const videos = [];\n    for (let i = 0; i < visibleVideos; i++) {\n      const video = videoList[(startIndex + i) % videoList.length];\n      if (video && video.id !== undefined && !videos.some(v => v.id === video.id)) {\n        videos.push(video);\n      } else {\n        console.error(\"Invalid video object:\", video);\n      }\n    }\n    return videos;\n  };\n  const handleNext = () => {\n    setInitialId(prevId => (prevId + visibleVideos) % videoList.length);\n  };\n  const handlePrev = () => {\n    setInitialId(prevId => (prevId - visibleVideos + videoList.length) % videoList.length);\n  };\n  if (!Array.isArray(videoList) || videoList.length === 0) {\n    console.error(\"Invalid or empty videoList:\", videoList);\n    return null;\n  }\n  const displayVideos = getDisplayVideos(initialId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-slider\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"arrows-videos-container\",\n      children: [videoList.length > visibleVideos && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"arrows\",\n        onClick: handlePrev,\n        children: \"\\u276E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"videos-container\",\n        children: displayVideos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-item\",\n          children: [/*#__PURE__*/_jsxDEV(DriveVideoEmbed, {\n            videoUrl: video.videoUrl,\n            vertical: video.vertical,\n            title: video.title,\n            subtitle: video.subtitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: video.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: video.subtitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)]\n        }, video.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), videoList.length > visibleVideos && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"arrows\",\n        onClick: handleNext,\n        children: \"\\u276F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dots-container\",\n      children: Array.from({\n        length: videoList.length\n      }, (_, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `dot ${displayVideos.some(v => v.id === i) ? \"active\" : \"\"}`,\n        onClick: () => setInitialId(i)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(VideoSlider, \"uUBNOshc+fhFFQj2MHM87EHxB08=\", false, function () {\n  return [useMediaQuery];\n});\n_c = VideoSlider;\nexport default VideoSlider;\nvar _c;\n$RefreshReg$(_c, \"VideoSlider\");","map":{"version":3,"names":["React","useState","DriveVideoEmbed","useMediaQuery","jsxDEV","_jsxDEV","VideoSlider","videoList","_s","isDesktop","query","visibleVideos","initialId","setInitialId","getDisplayVideos","startIndex","videos","i","video","length","id","undefined","some","v","push","console","error","handleNext","prevId","handlePrev","Array","isArray","displayVideos","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","videoUrl","vertical","title","subtitle","from","_","_c","$RefreshReg$"],"sources":["C:/Users/mirei/Desktop/video-gallery/src/VideoSlider.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport DriveVideoEmbed from \"./DriveVideoEmbed.jsx\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nfunction VideoSlider({ videoList }) {\r\n    const isDesktop = useMediaQuery({ query: \"(min-width: 801px)\" });\r\n    const visibleVideos = isDesktop ? 4 : 2;\r\n    const [initialId, setInitialId] = useState(0);\r\n\r\n    const getDisplayVideos = (startIndex) => {\r\n        const videos = [];\r\n        for (let i = 0; i < visibleVideos; i++) {\r\n            const video = videoList[(startIndex + i) % videoList.length];\r\n            if (video && video.id !== undefined && !videos.some((v) => v.id === video.id)) {\r\n                videos.push(video);\r\n            } else {\r\n                console.error(\"Invalid video object:\", video);\r\n            }\r\n        }\r\n        return videos;\r\n    };\r\n\r\n    const handleNext = () => {\r\n        setInitialId((prevId) => (prevId + visibleVideos) % videoList.length);\r\n    };\r\n\r\n    const handlePrev = () => {\r\n        setInitialId((prevId) => (prevId - visibleVideos + videoList.length) % videoList.length);\r\n    };\r\n\r\n    if (!Array.isArray(videoList) || videoList.length === 0) {\r\n        console.error(\"Invalid or empty videoList:\", videoList);\r\n        return null;\r\n    }\r\n\r\n    const displayVideos = getDisplayVideos(initialId);\r\n\r\n    return (\r\n        <div className=\"video-slider\">\r\n            <div className=\"arrows-videos-container\">\r\n                {videoList.length > visibleVideos && (\r\n                    <button className=\"arrows\" onClick={handlePrev}>\r\n                        &#10094;\r\n                    </button>\r\n                )}\r\n\r\n                <div className=\"videos-container\">\r\n                    {displayVideos.map((video) => (\r\n                        <div key={video.id} className=\"video-item\">\r\n                            <DriveVideoEmbed\r\n                                videoUrl={video.videoUrl}\r\n                                vertical={video.vertical}\r\n                                title={video.title}\r\n                                subtitle={video.subtitle}\r\n                            />\r\n                            <h3>{video.title}</h3>\r\n                            <p>{video.subtitle}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                {videoList.length > visibleVideos && (\r\n                    <button className=\"arrows\" onClick={handleNext}>\r\n                        &#10095;\r\n                    </button>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"dots-container\">\r\n                {Array.from({ length: videoList.length }, (_, i) => (\r\n                    <span\r\n                        key={i}\r\n                        className={`dot ${displayVideos.some((v) => v.id === i) ? \"active\" : \"\"}`}\r\n                        onClick={() => setInitialId(i)}\r\n                    ></span>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default VideoSlider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}