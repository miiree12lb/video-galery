{"ast":null,"code":"import React,{useRef,useEffect}from\"react\";import{useMediaQuery}from\"react-responsive\";// @ts-ignore\nimport\"./css/slider.css\";import{jsx as _jsx}from\"react/jsx-runtime\";function DriveVideoEmbed(_ref){let{videoUrl,vertical,title,subtitle,videoId,isPlaying,onPlay,thumbnail}=_ref;const isDesktop=useMediaQuery({query:\"(min-width: 801px)\"});const iframeRef=useRef(null);// Determine dimensions based on layout (desktop/mobile and vertical orientation)\nlet width,height;if(vertical){width=isDesktop?\"15vw\":\"30vw\";height=`${parseFloat(width)*16/9}vw`;}else{height=\"15vw\";width=\"26.6666666666vw\";}// useEffect(() => {\n//     // Post message to iframe for autoplay or pause based on `isPlaying`\n//     if (iframeRef.current && isPlaying) {\n//         iframeRef.current.contentWindow.postMessage(\n//             '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}',\n//             \"*\"\n//         );\n//     } else if (iframeRef.current && !isPlaying) {\n//         iframeRef.current.contentWindow.postMessage(\n//             '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}',\n//             \"*\"\n//         );\n//     }\n// }, [isPlaying]);\n// Construct iframe URL with `enablejsapi=1` for control and autoplay setup\n// const embedUrl = `${videoUrl}?enablejsapi=1&autoplay=${isPlaying ? 1 : 0}&mute=1`;\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"video-container\",children:!isPlaying?/*#__PURE__*/_jsx(\"div\",{className:\"thumbnail-overlay\",style:{width,height,position:\"relative\",cursor:\"pointer\",display:\"flex\",justifyContent:\"center\",alignItems:\"center\",backgroundColor:thumbnail?\"transparent\":\"#292929\",// Fallback color\nbackgroundImage:thumbnail?`url(${thumbnail})`:\"none\",backgroundSize:\"cover\",backgroundPosition:\"center\",borderRadius:\"5px\"},onClick:()=>onPlay(videoId)}):/*#__PURE__*/_jsx(\"iframe\",{ref:iframeRef,id:`iframe-${videoId}`,src:videoUrl,style:{top:0,left:0,width,height,border:\"none\",borderRadius:\"5px\"},allow:\"autoplay; encrypted-media\",allowFullScreen:true,allowfullscreen:\"true\",title:title})});}export default DriveVideoEmbed;","map":{"version":3,"names":["React","useRef","useEffect","useMediaQuery","jsx","_jsx","DriveVideoEmbed","_ref","videoUrl","vertical","title","subtitle","videoId","isPlaying","onPlay","thumbnail","isDesktop","query","iframeRef","width","height","parseFloat","className","children","style","position","cursor","display","justifyContent","alignItems","backgroundColor","backgroundImage","backgroundSize","backgroundPosition","borderRadius","onClick","ref","id","src","top","left","border","allow","allowFullScreen","allowfullscreen"],"sources":["C:/Users/mirei/Desktop/video-gallery/src/DriveVideoEmbed.jsx"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n// @ts-ignore\r\nimport \"./css/slider.css\";\r\n\r\nfunction DriveVideoEmbed({ videoUrl, vertical, title, subtitle, videoId, isPlaying, onPlay, thumbnail }) {\r\n    const isDesktop = useMediaQuery({ query: \"(min-width: 801px)\" });\r\n    const iframeRef = useRef(null);\r\n\r\n    // Determine dimensions based on layout (desktop/mobile and vertical orientation)\r\n    let width, height;\r\n    if (vertical) {\r\n        width = isDesktop ? \"15vw\" : \"30vw\";\r\n        height = `${(parseFloat(width) * 16) / 9}vw`;\r\n    } else {\r\n        height = \"15vw\";\r\n        width = \"26.6666666666vw\";\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     // Post message to iframe for autoplay or pause based on `isPlaying`\r\n    //     if (iframeRef.current && isPlaying) {\r\n    //         iframeRef.current.contentWindow.postMessage(\r\n    //             '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}',\r\n    //             \"*\"\r\n    //         );\r\n    //     } else if (iframeRef.current && !isPlaying) {\r\n    //         iframeRef.current.contentWindow.postMessage(\r\n    //             '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}',\r\n    //             \"*\"\r\n    //         );\r\n    //     }\r\n    // }, [isPlaying]);\r\n\r\n    // Construct iframe URL with `enablejsapi=1` for control and autoplay setup\r\n    // const embedUrl = `${videoUrl}?enablejsapi=1&autoplay=${isPlaying ? 1 : 0}&mute=1`;\r\n\r\n    return (\r\n        <div className=\"video-container\">\r\n            {!isPlaying ? (\r\n                <div\r\n                    className=\"thumbnail-overlay\"\r\n                    style={{\r\n                        width,\r\n                        height,\r\n                        position: \"relative\",\r\n                        cursor: \"pointer\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        backgroundColor: thumbnail ? \"transparent\" : \"#292929\", // Fallback color\r\n                        backgroundImage: thumbnail ? `url(${thumbnail})` : \"none\",\r\n                        backgroundSize: \"cover\",\r\n                        backgroundPosition: \"center\",\r\n                        borderRadius: \"5px\",\r\n                    }}\r\n                    onClick={() => onPlay(videoId)}\r\n                >\r\n                </div>\r\n            ) : (\r\n                <iframe\r\n    ref={iframeRef}\r\n    id={`iframe-${videoId}`}\r\n    src={videoUrl}\r\n    style={{\r\n        top: 0,\r\n        left: 0,\r\n        width,\r\n        height,\r\n        border: \"none\",\r\n        borderRadius: \"5px\",\r\n    }}\r\n    allow=\"autoplay; encrypted-media\"\r\n    allowFullScreen\r\n    allowfullscreen=\"true\"\r\n    title={title}\r\n></iframe>\r\n\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DriveVideoEmbed;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,MAAM,CAAEC,SAAS,KAAQ,OAAO,CAChD,OAASC,aAAa,KAAQ,kBAAkB,CAChD;AACA,MAAO,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1B,QAAS,CAAAC,eAAeA,CAAAC,IAAA,CAAiF,IAAhF,CAAEC,QAAQ,CAAEC,QAAQ,CAAEC,KAAK,CAAEC,QAAQ,CAAEC,OAAO,CAAEC,SAAS,CAAEC,MAAM,CAAEC,SAAU,CAAC,CAAAR,IAAA,CACnG,KAAM,CAAAS,SAAS,CAAGb,aAAa,CAAC,CAAEc,KAAK,CAAE,oBAAqB,CAAC,CAAC,CAChE,KAAM,CAAAC,SAAS,CAAGjB,MAAM,CAAC,IAAI,CAAC,CAE9B;AACA,GAAI,CAAAkB,KAAK,CAAEC,MAAM,CACjB,GAAIX,QAAQ,CAAE,CACVU,KAAK,CAAGH,SAAS,CAAG,MAAM,CAAG,MAAM,CACnCI,MAAM,CAAG,GAAIC,UAAU,CAACF,KAAK,CAAC,CAAG,EAAE,CAAI,CAAC,IAAI,CAChD,CAAC,IAAM,CACHC,MAAM,CAAG,MAAM,CACfD,KAAK,CAAG,iBAAiB,CAC7B,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,mBACId,IAAA,QAAKiB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAC3B,CAACV,SAAS,cACPR,IAAA,QACIiB,SAAS,CAAC,mBAAmB,CAC7BE,KAAK,CAAE,CACHL,KAAK,CACLC,MAAM,CACNK,QAAQ,CAAE,UAAU,CACpBC,MAAM,CAAE,SAAS,CACjBC,OAAO,CAAE,MAAM,CACfC,cAAc,CAAE,QAAQ,CACxBC,UAAU,CAAE,QAAQ,CACpBC,eAAe,CAAEf,SAAS,CAAG,aAAa,CAAG,SAAS,CAAE;AACxDgB,eAAe,CAAEhB,SAAS,CAAG,OAAOA,SAAS,GAAG,CAAG,MAAM,CACzDiB,cAAc,CAAE,OAAO,CACvBC,kBAAkB,CAAE,QAAQ,CAC5BC,YAAY,CAAE,KAClB,CAAE,CACFC,OAAO,CAAEA,CAAA,GAAMrB,MAAM,CAACF,OAAO,CAAE,CAE9B,CAAC,cAENP,IAAA,WACZ+B,GAAG,CAAElB,SAAU,CACfmB,EAAE,CAAE,UAAUzB,OAAO,EAAG,CACxB0B,GAAG,CAAE9B,QAAS,CACdgB,KAAK,CAAE,CACHe,GAAG,CAAE,CAAC,CACNC,IAAI,CAAE,CAAC,CACPrB,KAAK,CACLC,MAAM,CACNqB,MAAM,CAAE,MAAM,CACdP,YAAY,CAAE,KAClB,CAAE,CACFQ,KAAK,CAAC,2BAA2B,CACjCC,eAAe,MACfC,eAAe,CAAC,MAAM,CACtBlC,KAAK,CAAEA,KAAM,CACR,CAEI,CACA,CAAC,CAEd,CAEA,cAAe,CAAAJ,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}