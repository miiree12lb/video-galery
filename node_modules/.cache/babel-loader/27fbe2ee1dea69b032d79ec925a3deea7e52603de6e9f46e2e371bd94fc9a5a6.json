{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mirei\\\\Desktop\\\\video-gallery\\\\src\\\\DriveVideoEmbed.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\n// @ts-ignore\nimport './css/slider.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DriveVideoEmbed({\n  videoUrl,\n  vertical,\n  title,\n  subtitle\n}) {\n  _s();\n  const isDesktop = useMediaQuery({\n    query: \"(min-width: 801px)\"\n  });\n  let width, height;\n  if (vertical) {\n    if (isDesktop) {\n      width = \"15vw\";\n    } else {\n      width = \"30vw\";\n    }\n    height = `${parseFloat(width) * 16 / 9}vw`;\n  } else {\n    height = \"15vw\";\n    width = \"26.6666666666vw\";\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: videoUrl,\n        style: {\n          top: 0,\n          left: 0,\n          width: width,\n          height: height,\n          border: \"none\"\n        },\n        allow: \"autoplay\",\n        title: \"Google Drive Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: subtitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(DriveVideoEmbed, \"OwvWUQgjrMnuU8GZKzxgeJ0yhK4=\", false, function () {\n  return [useMediaQuery];\n});\n_c = DriveVideoEmbed;\nexport default DriveVideoEmbed;\nvar _c;\n$RefreshReg$(_c, \"DriveVideoEmbed\");","map":{"version":3,"names":["React","useMediaQuery","jsxDEV","_jsxDEV","Fragment","_Fragment","DriveVideoEmbed","videoUrl","vertical","title","subtitle","_s","isDesktop","query","width","height","parseFloat","children","src","style","top","left","border","allow","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mirei/Desktop/video-gallery/src/DriveVideoEmbed.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n// @ts-ignore\r\nimport './css/slider.css';\r\n\r\nfunction DriveVideoEmbed({ videoUrl, vertical, title, subtitle}) {\r\n    const isDesktop = useMediaQuery({ query: \"(min-width: 801px)\" });\r\n\r\n    let width, height;\r\n\tif (vertical) {\r\n        if (isDesktop) {\r\n            width=\"15vw\";\r\n        }\r\n        else {\r\n            width=\"30vw\";\r\n        }\r\n\t\t\r\n        height = `${(parseFloat(width) * 16) / 9}vw`;\r\n\t}\r\n\telse {\r\n\t\theight=\"15vw\";\r\n        width=\"26.6666666666vw\";\r\n\t}\r\n\t\r\n\treturn (\r\n        <>\r\n            <div>\r\n                <iframe\r\n                    src={videoUrl}\r\n                    style={{\r\n\r\n                        top: 0,\r\n                        left: 0,\r\n                        width: width,\r\n                        height: height,\r\n                        border: \"none\",\r\n                    }}\r\n                    allow=\"autoplay\"\r\n                    title=\"Google Drive Video\"\r\n                ></iframe>\r\n            </div>\r\n                <div>\r\n                <h3>{title}</h3>\r\n                <p>{subtitle}</p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DriveVideoEmbed;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,kBAAkB;AAChD;AACA,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,eAAeA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC,KAAK;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC7D,MAAMC,SAAS,GAAGX,aAAa,CAAC;IAAEY,KAAK,EAAE;EAAqB,CAAC,CAAC;EAEhE,IAAIC,KAAK,EAAEC,MAAM;EACpB,IAAIP,QAAQ,EAAE;IACP,IAAII,SAAS,EAAE;MACXE,KAAK,GAAC,MAAM;IAChB,CAAC,MACI;MACDA,KAAK,GAAC,MAAM;IAChB;IAEAC,MAAM,GAAG,GAAIC,UAAU,CAACF,KAAK,CAAC,GAAG,EAAE,GAAI,CAAC,IAAI;EACnD,CAAC,MACI;IACJC,MAAM,GAAC,MAAM;IACPD,KAAK,GAAC,iBAAiB;EAC9B;EAEA,oBACOX,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACId,OAAA;MAAAc,QAAA,eACId,OAAA;QACIe,GAAG,EAAEX,QAAS;QACdY,KAAK,EAAE;UAEHC,GAAG,EAAE,CAAC;UACNC,IAAI,EAAE,CAAC;UACPP,KAAK,EAAEA,KAAK;UACZC,MAAM,EAAEA,MAAM;UACdO,MAAM,EAAE;QACZ,CAAE;QACFC,KAAK,EAAC,UAAU;QAChBd,KAAK,EAAC;MAAoB;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFxB,OAAA;MAAAc,QAAA,gBACAd,OAAA;QAAAc,QAAA,EAAKR;MAAK;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChBxB,OAAA;QAAAc,QAAA,EAAIP;MAAQ;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA,eACR,CAAC;AAEX;AAAChB,EAAA,CA1CQL,eAAe;EAAA,QACFL,aAAa;AAAA;AAAA2B,EAAA,GAD1BtB,eAAe;AA4CxB,eAAeA,eAAe;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}