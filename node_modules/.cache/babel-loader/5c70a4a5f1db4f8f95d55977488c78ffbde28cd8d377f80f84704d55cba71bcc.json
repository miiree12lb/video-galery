{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mirei\\\\Desktop\\\\video-gallery\\\\src\\\\VideoSlider.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport DriveVideoEmbed from \"./DriveVideoEmbed.jsx\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VideoSlider({\n  videoList\n}) {\n  _s();\n  const isDesktop = useMediaQuery({\n    query: \"(min-width: 801px)\"\n  });\n  const [currentPosition, setCurrentPosition] = useState(0);\n  const [startX, setStartX] = useState(0); // Start X position for sliding\n  const [isDragging, setIsDragging] = useState(false); // Track dragging state\n  const containerRef = useRef(null);\n  const visibleVideos = isDesktop ? 4 : 2;\n  const videoWidth = containerRef.current ? containerRef.current.offsetWidth / visibleVideos : 0;\n  const maxPosition = Math.max(0, videoList.length - visibleVideos);\n  const handleNext = () => {\n    if (currentPosition < maxPosition) {\n      setCurrentPosition(currentPosition + 1);\n    }\n  };\n  const handlePrev = () => {\n    if (currentPosition > 0) {\n      setCurrentPosition(currentPosition - 1);\n    }\n  };\n\n  // Handle touch start\n  const handleTouchStart = e => {\n    setStartX(e.touches[0].clientX);\n    setIsDragging(true);\n  };\n\n  // Handle touch move\n  const handleTouchMove = e => {\n    if (!isDragging) return;\n    const currentX = e.touches[0].clientX;\n    const distance = currentX - startX;\n    if (distance > 50 && currentPosition > 0) {\n      handlePrev();\n      setIsDragging(false); // Prevent multiple triggers\n    } else if (distance < -50 && currentPosition < maxPosition) {\n      handleNext();\n      setIsDragging(false); // Prevent multiple triggers\n    }\n  };\n\n  // Handle touch end\n  const handleTouchEnd = () => {\n    setIsDragging(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"arrows-videos-container\",\n    children: [videoList.length > visibleVideos && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"arrows\",\n      onClick: handlePrev,\n      children: \"\\u276E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videos-container\",\n      ref: containerRef,\n      onTouchStart: handleTouchStart,\n      onTouchMove: handleTouchMove,\n      onTouchEnd: handleTouchEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"videos-slider\",\n        style: {\n          transform: `translateX(-${currentPosition * videoWidth}px)`,\n          transition: isDragging ? \"none\" : \"transform 0.3s ease-in-out\",\n          display: \"flex\",\n          gap: \"20px\"\n        },\n        children: videoList.map((video, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-item\",\n          children: /*#__PURE__*/_jsxDEV(DriveVideoEmbed, {\n            videoUrl: video.videoUrl,\n            vertical: video.vertical\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), videoList.length > visibleVideos && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"arrows\",\n      onClick: handleNext,\n      children: \"\\u276F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(VideoSlider, \"5uZrwHa+VTAX5JwOIjsrHYOSwgI=\", false, function () {\n  return [useMediaQuery];\n});\n_c = VideoSlider;\nexport default VideoSlider;\nvar _c;\n$RefreshReg$(_c, \"VideoSlider\");","map":{"version":3,"names":["React","useState","useRef","DriveVideoEmbed","useMediaQuery","jsxDEV","_jsxDEV","VideoSlider","videoList","_s","isDesktop","query","currentPosition","setCurrentPosition","startX","setStartX","isDragging","setIsDragging","containerRef","visibleVideos","videoWidth","current","offsetWidth","maxPosition","Math","max","length","handleNext","handlePrev","handleTouchStart","e","touches","clientX","handleTouchMove","currentX","distance","handleTouchEnd","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","onTouchStart","onTouchMove","onTouchEnd","style","transform","transition","display","gap","map","video","index","videoUrl","vertical","_c","$RefreshReg$"],"sources":["C:/Users/mirei/Desktop/video-gallery/src/VideoSlider.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport DriveVideoEmbed from \"./DriveVideoEmbed.jsx\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nfunction VideoSlider({ videoList }) {\r\n    const isDesktop = useMediaQuery({ query: \"(min-width: 801px)\" });\r\n    const [currentPosition, setCurrentPosition] = useState(0);\r\n    const [startX, setStartX] = useState(0); // Start X position for sliding\r\n    const [isDragging, setIsDragging] = useState(false); // Track dragging state\r\n    const containerRef = useRef(null);\r\n\r\n    const visibleVideos = isDesktop ? 4 : 2;\r\n    const videoWidth = containerRef.current\r\n        ? containerRef.current.offsetWidth / visibleVideos\r\n        : 0;\r\n\r\n    const maxPosition = Math.max(0, videoList.length - visibleVideos);\r\n\r\n    const handleNext = () => {\r\n        if (currentPosition < maxPosition) {\r\n            setCurrentPosition(currentPosition + 1);\r\n        }\r\n    };\r\n\r\n    const handlePrev = () => {\r\n        if (currentPosition > 0) {\r\n            setCurrentPosition(currentPosition - 1);\r\n        }\r\n    };\r\n\r\n    // Handle touch start\r\n    const handleTouchStart = (e) => {\r\n        setStartX(e.touches[0].clientX);\r\n        setIsDragging(true);\r\n    };\r\n\r\n    // Handle touch move\r\n    const handleTouchMove = (e) => {\r\n        if (!isDragging) return;\r\n        const currentX = e.touches[0].clientX;\r\n        const distance = currentX - startX;\r\n\r\n        if (distance > 50 && currentPosition > 0) {\r\n            handlePrev();\r\n            setIsDragging(false); // Prevent multiple triggers\r\n        } else if (distance < -50 && currentPosition < maxPosition) {\r\n            handleNext();\r\n            setIsDragging(false); // Prevent multiple triggers\r\n        }\r\n    };\r\n\r\n    // Handle touch end\r\n    const handleTouchEnd = () => {\r\n        setIsDragging(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"arrows-videos-container\">\r\n            {videoList.length > visibleVideos && (\r\n                <button className=\"arrows\" onClick={handlePrev}>\r\n                    &#10094;\r\n                </button>\r\n            )}\r\n\r\n            <div\r\n                className=\"videos-container\"\r\n                ref={containerRef}\r\n                onTouchStart={handleTouchStart}\r\n                onTouchMove={handleTouchMove}\r\n                onTouchEnd={handleTouchEnd}\r\n            >\r\n                <div\r\n                    className=\"videos-slider\"\r\n                    style={{\r\n                        transform: `translateX(-${\r\n                            currentPosition * videoWidth\r\n                        }px)`,\r\n                        transition: isDragging ? \"none\" : \"transform 0.3s ease-in-out\",\r\n                        display: \"flex\",\r\n                        gap: \"20px\",\r\n                    }}\r\n                >\r\n                    {videoList.map((video, index) => (\r\n                        <div key={index} className=\"video-item\">\r\n                            <DriveVideoEmbed\r\n                                videoUrl={video.videoUrl}\r\n                                vertical={video.vertical}\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {videoList.length > visibleVideos && (\r\n                <button className=\"arrows\" onClick={handleNext}>\r\n                    &#10095;\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VideoSlider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}